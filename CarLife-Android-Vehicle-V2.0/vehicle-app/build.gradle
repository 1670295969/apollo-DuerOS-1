plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-android-extensions'
}

android {

    compileSdkVersion rootProject.ext.android.compileSdkVersion

    signingConfigs {
        debug {
            storeFile file("debug.keystore")
        }
        release {
            storeFile file("carlife.keystore")
            keyAlias 'carlife.keystore'
            keyPassword 'm5ZRYQe4yrpm6jdx'
            storePassword 'm5ZRYQe4yrpm6jdx'
        }
    }

    defaultConfig {

        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion

        applicationId "com.baidu.carlifevehicle"

        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName

        flavorDimensions "versionCode"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        manifestPlaceholders = [
                JPUSH_PKGNAME: applicationId,
                JPUSH_APPKEY : "**********", //JPush上注册的包名对应的appkey.
                JPUSH_CHANNEL: "developer-default", //暂时填写默认值即可.
        ]

        ndk {
            abiFilters 'armeabi', 'armeabi-v7a', 'armeabi-v8a'
        }

        multiDexEnabled true
    }

    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
        languageVersion = "1.5"
        apiVersion = "1.5"
        freeCompilerArgs = ['-Xjvm-default=all']
    }

    aaptOptions {
        noCompress "pcm"
    }

    sourceSets {
        main {
            aidl.srcDirs = ['src/main/java']
        }
    }
}

repositories{
    //libs 目录
    flatDir{
        dirs "libs"
    }
}

androidExtensions {
    experimental = true
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    api project(':carlife-sdk')
//    if (CARLIFE_SDK_EDITABLE.toBoolean()) {
//        api project(':carlife-sdk')
//    } else {
//        api files("../libs/carlife-sdk-release.aar")
//        api "com.google.protobuf:protobuf-lite:3.0.1"
//    }

    implementation 'androidx.core:core-ktx:1.3.2'

    implementation ('com.google.android.material:material:1.3.0') {
        //exclude group: 'androidx.fragment', module: 'fragment'
    }

    implementation ('androidx.appcompat:appcompat:1.2.0') {
        //exclude group: 'androidx.fragment', module: 'fragment'
    }
    implementation "androidx.media:media:1.3.0"

    implementation ('androidx.constraintlayout:constraintlayout:2.0.4') {
        //exclude group: 'androidx.fragment', module: 'fragment'
    }

    implementation ('androidx.preference:preference-ktx:1.1.1') {
        //exclude group: 'androidx.fragment', module: 'fragment'
    }

    implementation "androidx.activity:activity:1.2.2"

    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    implementation rootProject.ext.dependencies["permissionx"]
}